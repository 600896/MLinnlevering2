import kagglehub
sudalairajkumar_cryptocurrencypricehistory_path = kagglehub.dataset_download('sudalairajkumar/cryptocurrencypricehistory')

print('Data source import complete.')

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

import pandas as pd

#
historical_data = pd.read_csv('sudalairajkumar_cryptocurrencypricehistory_path/coin_Bitcoin.csv')

from transformers import pipeline

def analyze_sentiment(text):
    sid = SentimentIntensityAnalyzer()
    scores = sid.polarity_scores(text)
    compound_score = scores['compound']

    # Determine sentiment based on compound score
    if compound_score >= 0.05:
        sentiment = 'Bullish'
    elif compound_score <= -0.05:
        sentiment = 'Bearish'
    else:
        sentiment = 'Neutral'

    return sentiment, scores

def map_to_market_sentiment(sentiment_label):
    if sentiment_label in ['POSITIVE', 'Bullish']:
        return 'Bullish'
    elif sentiment_label in ['NEGATIVE', 'Bearish']:
        return 'Bearish'
    else:
        return 'Neutral'

ef predict_market_sentiment(url):
    article_text = get_article_text(url)
    sentiment, scores = analyze_sentiment(article_text)
    certainty_percentage = abs(scores['compound']) * 100  # Convert to percentage

    print(f"Predicted Market Sentiment: {sentiment}")
    print(f"Certainty of Prediction: {certainty_percentage:.2f}%")
    print(f"Sentiment Scores: {scores}")

article_url = 'https://www.coindesk.com/markets/2024/10/29/bitcoin-surges-above-71k-as-wild-crypto-market-pump-sees-175m-in-shorts-liquidated/'
predict_market_sentiment(article_url)

!pip install gradio

import gradio as gr

def gradio_predict_sentiment(message, history):
    url = message["text"]
    prediction, certainty, scores = predict_market_sentiment(url)
    return f"{prediction}\n{certainty}\n{scores}"

# Gradio setup
demo = gr.Interface(fn=gradio_predict_sentiment, 
                    inputs=gr.Textbox(label="Enter Article URL"),
                    outputs="text",
                    title="Market Sentiment Predictor")

# Launch the Gradio interface
demo.launch()
